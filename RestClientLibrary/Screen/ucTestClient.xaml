<base:BaseUserControl
    x:Class="RestClientLibrary.Screen.ucTestClient"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:base="clr-namespace:DataLibrary;assembly=DataLibrary"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:data="clr-namespace:RestClientLibrary.ViewModel"
    xmlns:local="clr-namespace:RestClientLibrary.Screen"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    d:DesignHeight="300"
    d:DesignWidth="300"
    mc:Ignorable="d">

    <Grid>
        <Grid.Resources>
            <HierarchicalDataTemplate DataType="{x:Type data:TestSuiteViewModel}" ItemsSource="{Binding TestCasesSelected}">
                <TextBlock>
                    <WrapPanel>
                        <Image
                            Name="image"
                            Width="20"
                            Height="20">
                            <Image.Style>
                                <Style TargetType="Image">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Result}" Value="Pass">
                                            <Setter Property="Source" Value="/RestClientLibrary;component/Images/pass.png" />
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Result}" Value="Fail">
                                            <Setter Property="Source" Value="/RestClientLibrary;component/Images/fail.png" />
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Result}" Value="InProgress">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Result}" Value="NotStarted">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                        <base:CircularWait
                            Name="progress"
                            Width="20"
                            Height="20">
                            <base:CircularWait.Style>
                                <Style TargetType="{x:Type base:CircularWait}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Result}" Value="Pass">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Result}" Value="Fail">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Result}" Value="InProgress">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Result}" Value="NotStarted">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </base:CircularWait.Style>
                        </base:CircularWait>
                    </WrapPanel>
                    <TextBlock Name="pnlCat">
                        <Hyperlink Command="{Binding TestSuiteSelectedCommand}">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock FontWeight="Bold" Text="{Binding TestSuiteID}" />
                                <TextBlock Text=" - " />
                                <TextBlock FontWeight="Bold" Text="{Binding Title}" />
                            </StackPanel>
                        </Hyperlink>
                        <TextBlock Text="" />
                        <Button
                            x:Name="btnExecute"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Stretch"
                            VerticalContentAlignment="Bottom"
                            Command="{Binding ExecuteTestsCommand}"
                            Content="4"
                            FontFamily="Webdings"
                            FontSize="17"
                            Foreground="{DynamicResource SuccessColorBrush}"
                            ToolTip="Execute">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Grid>
                                                    <ContentPresenter RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsFocused" Value="True" />
                                                    <Trigger Property="IsDefaulted" Value="True" />
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="FontWeight" Value="Bold" />
                                                    </Trigger>
                                                    <Trigger Property="IsPressed" Value="True" />
                                                    <Trigger Property="IsEnabled" Value="False" />
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Button.Style>
                        </Button>
                        <Button
                            x:Name="btnRemoveCategory"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Stretch"
                            VerticalContentAlignment="Bottom"
                            Command="{Binding RemoveCommand}"
                            Content="O"
                            FontFamily="Wingdings 2"
                            FontSize="17"
                            Foreground="Red"
                            ToolTip="Remove"
                            Visibility="Hidden">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Grid>
                                                    <ContentPresenter RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsFocused" Value="True" />
                                                    <Trigger Property="IsDefaulted" Value="True" />
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="FontWeight" Value="Bold" />
                                                    </Trigger>
                                                    <Trigger Property="IsPressed" Value="True" />
                                                    <Trigger Property="IsEnabled" Value="False" />
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Button.Style>
                        </Button>
                    </TextBlock>
                </TextBlock>
                <DataTemplate.Triggers>
                    <Trigger SourceName="pnlCat" Property="IsMouseOver" Value="True">
                        <Setter TargetName="btnRemoveCategory" Property="Visibility" Value="Visible" />
                    </Trigger>
                </DataTemplate.Triggers>
            </HierarchicalDataTemplate>
            <HierarchicalDataTemplate DataType="{x:Type data:TestCaseViewModel}" ItemsSource="{Binding Validations}">
                <TextBlock>
                    <WrapPanel>
                        <Image
                            Name="image"
                            Width="18"
                            Height="18">
                            <Image.Style>
                                <Style TargetType="Image">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding TestCaseResult}" Value="Pass">
                                            <Setter Property="Source" Value="/RestClientLibrary;component/Images/pass.png" />
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding TestCaseResult}" Value="Fail">
                                            <Setter Property="Source" Value="/RestClientLibrary;component/Images/fail.png" />
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding TestCaseResult}" Value="InProgress">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding TestCaseResult}" Value="NotStarted">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                        <base:CircularWait
                            Name="progress"
                            Width="18"
                            Height="18">
                            <base:CircularWait.Style>
                                <Style TargetType="{x:Type base:CircularWait}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding TestCaseResult}" Value="Pass">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding TestCaseResult}" Value="Fail">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding TestCaseResult}" Value="InProgress">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding TestCaseResult}" Value="NotStarted">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </base:CircularWait.Style>
                        </base:CircularWait>
                    </WrapPanel>
                    <TextBlock Name="pnlCat">
                        <Hyperlink Command="{Binding TestCaseSelectedCommand}">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock FontWeight="Bold" Text="{Binding TestCaseID}" />
                                <TextBlock Text=" - " />
                                <TextBlock FontWeight="Bold" Text="{Binding Title}" />
                            </StackPanel>
                        </Hyperlink>
                        <TextBlock Text=" " />
                        <Button
                            x:Name="btnExecute"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Stretch"
                            VerticalContentAlignment="Bottom"
                            Command="{Binding ExecuteTestCommand}"
                            Content="4"
                            FontFamily="Webdings"
                            FontSize="17"
                            Foreground="{DynamicResource SuccessColorBrush}"
                            ToolTip="Execute">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Grid>
                                                    <ContentPresenter RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsFocused" Value="True" />
                                                    <Trigger Property="IsDefaulted" Value="True" />
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="FontWeight" Value="Bold" />
                                                    </Trigger>
                                                    <Trigger Property="IsPressed" Value="True" />
                                                    <Trigger Property="IsEnabled" Value="False" />
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Button.Style>
                        </Button>
                        <Button
                            x:Name="btnRemove"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Stretch"
                            VerticalContentAlignment="Bottom"
                            Command="{Binding RemoveCommand}"
                            Content="O"
                            FontFamily="Wingdings 2"
                            FontSize="17"
                            Foreground="Red"
                            ToolTip="Remove"
                            Visibility="Hidden">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Grid>
                                                    <ContentPresenter RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsFocused" Value="True" />
                                                    <Trigger Property="IsDefaulted" Value="True" />
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="FontWeight" Value="Bold" />
                                                    </Trigger>
                                                    <Trigger Property="IsPressed" Value="True" />
                                                    <Trigger Property="IsEnabled" Value="False" />
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Button.Style>
                        </Button>
                    </TextBlock>
                </TextBlock>
                <DataTemplate.Triggers>
                    <Trigger SourceName="pnlCat" Property="IsMouseOver" Value="True">
                        <Setter TargetName="btnRemove" Property="Visibility" Value="Visible" />
                    </Trigger>
                </DataTemplate.Triggers>
            </HierarchicalDataTemplate>
            <DataTemplate DataType="{x:Type val:BaseValidationRuleViewModel}">
                <StackPanel Name="pnlReq" Orientation="Horizontal">
                    <WrapPanel>
                        <Image
                            Name="image"
                            Width="16"
                            Height="16"
                            ToolTip="{Binding ResultText}">
                            <Image.Style>
                                <Style TargetType="Image">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Result}" Value="Pass">
                                            <Setter Property="Source" Value="/RestClientLibrary;component/Images/pass.png" />
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Result}" Value="Fail">
                                            <Setter Property="Source" Value="/RestClientLibrary;component/Images/fail.png" />
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Result}" Value="InProgress">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Result}" Value="NotStarted">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                        <base:CircularWait
                            Name="progress"
                            Width="16"
                            Height="16">
                            <base:CircularWait.Style>
                                <Style TargetType="{x:Type base:CircularWait}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Result}" Value="Pass">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Result}" Value="Fail">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Result}" Value="InProgress">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Result}" Value="NotStarted">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </base:CircularWait.Style>
                        </base:CircularWait>
                    </WrapPanel>
                    <TextBlock>
                        <Run Text="Validation:" />
                        <TextBlock FontWeight="Bold">
                            <Run Text="{Binding Type}" />
                            <Run Text=" - " />
                            <Run Text="{Binding ExpectedValue}" />
                        </TextBlock>
                        <TextBlock.ToolTip>
                            <StackPanel>
                                <TextBlock Text="{Binding ValidationText}" />
                            </StackPanel>
                        </TextBlock.ToolTip>
                    </TextBlock>
                </StackPanel>
            </DataTemplate>
        </Grid.Resources>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="20" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <TextBlock>
            <Run Text="Test Cases:" />
            <TextBlock>
                <Hyperlink Command="{Binding RunAllTestCasesCommand}">
                    <TextBlock Text="Run All" />
                </Hyperlink>
            </TextBlock>
        </TextBlock>
        <TextBlock Grid.Column="1">
            <Run Text="Test Suits:" />
            <TextBlock>
                <Hyperlink Command="{Binding RunAllTestSuitsCommand}">
                    <TextBlock Text="Run All" />
                </Hyperlink>
            </TextBlock>
        </TextBlock>
        <TreeView
            Grid.Row="1"
            Background="Transparent"
            BorderThickness="0"
            ItemsSource="{Binding TestCases}" />
        <TreeView
            Grid.Row="1"
            Grid.Column="1"
            Background="Transparent"
            BorderThickness="0"
            ItemsSource="{Binding TestSuits}" />
    </Grid>
</base:BaseUserControl>
