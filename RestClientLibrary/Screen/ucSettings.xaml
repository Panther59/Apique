<base:BaseUserControl
	x:Class="RestClientLibrary.Screen.ucSettings"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:base="clr-namespace:DataLibrary;assembly=DataLibrary"
	xmlns:com="clr-namespace:DataLibrary.Common;assembly=DataLibrary"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
	xmlns:local="clr-namespace:RestClientLibrary.Screen"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	d:DesignHeight="300"
	d:DesignWidth="300"
	mc:Ignorable="d">
	<Grid>
		<Grid.Resources>
			<com:StringNullOrEmptyToVisibilityConverter x:Key="StringNullOrEmptyToVisibilityConverter" />
			<com:StringNotNullOrNonEmptyToVisibilityConverter x:Key="StringNotNullOrNonEmptyToVisibilityConverter" />
		</Grid.Resources>
		<TabControl>
			<TabItem Header="General">
				<StackPanel>
					<GroupBox>
						<StackPanel Margin="5">
							<WrapPanel>
								<TextBlock Text="Show Request Content in History" />
								<CheckBox Margin="10,3" IsChecked="{Binding ShowRequestContentInHistory, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
							</WrapPanel>
							<GroupBox Header="Search Settings">
								<StackPanel>
									<CheckBox
										Margin="3"
										Content="Search in URL"
										IsChecked="True"
										IsEnabled="False" />
									<CheckBox
										Margin="3"
										Content="Search in Request"
										IsChecked="{Binding SearchInRequest}" />
									<CheckBox
										Margin="3"
										Content="Search in Heaaders"
										IsChecked="{Binding SearchInHeaders}" />
									<CheckBox
										Margin="3"
										Content="Search in Status"
										IsChecked="{Binding SearchInStatus}" />
									<StackPanel Orientation="Horizontal">
										<TextBlock VerticalAlignment="Center" Text="Retain History of " />
										<TextBox Text="{Binding MaxHistoryDays, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
										<TextBlock VerticalAlignment="Center" Text=" days" />
									</StackPanel>
								</StackPanel>
							</GroupBox>
							<Grid>
								<Button
									Width="50"
									Margin="5"
									Command="{Binding SaveButtonClickedCommand}"
									Content="Save" />
							</Grid>

						</StackPanel>
					</GroupBox>
					<GroupBox Visibility="Collapsed">
						<Grid>
							<StackPanel>
								<TextBlock Name="txtAddNew">
									<TextBlock Text="Certificates:" />
									<TextBlock Text="      " />
									<Hyperlink Command="{Binding AddNewCertCommand}">
										<TextBlock Text="Add New" />
									</Hyperlink>
								</TextBlock>
								<ListView
									MinHeight="50"
									Background="Transparent"
									BorderBrush="White"
									ItemsSource="{Binding Certificates}">
									<ListView.Resources>
										<Style TargetType="{x:Type ListViewItem}">
											<Setter Property="HorizontalContentAlignment" Value="Stretch" />
											<Setter Property="Margin" Value="3,1" />
										</Style>
									</ListView.Resources>
									<ListView.ItemTemplate>
										<DataTemplate>
											<Grid>
												<Grid.RowDefinitions>
													<RowDefinition Height="23" />
												</Grid.RowDefinitions>
												<Grid>
													<Grid.ColumnDefinitions>
														<ColumnDefinition Width="*" />
														<ColumnDefinition Width="40" />
													</Grid.ColumnDefinitions>
													<TextBlock FontWeight="Bold" Text="{Binding Name}" />
													<Button
														x:Name="btnRemoveCert"
														Grid.Column="1"
														HorizontalAlignment="Center"
														VerticalAlignment="Center"
														Command="{Binding RemoveCertificateCommand}"
														Content="O"
														FontFamily="Wingdings 2"
														FontSize="17"
														Foreground="Red"
														ToolTip="Remove">
														<Button.Style>
															<Style TargetType="{x:Type Button}">
																<Setter Property="Template">
																	<Setter.Value>
																		<ControlTemplate TargetType="{x:Type Button}">
																			<Grid>
																				<ContentPresenter RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
																			</Grid>
																			<ControlTemplate.Triggers>
																				<Trigger Property="IsFocused" Value="True" />
																				<Trigger Property="IsDefaulted" Value="True" />
																				<Trigger Property="IsMouseOver" Value="True">
																					<Setter Property="FontWeight" Value="Bold" />
																				</Trigger>
																				<Trigger Property="IsPressed" Value="True" />
																				<Trigger Property="IsEnabled" Value="False" />
																			</ControlTemplate.Triggers>
																		</ControlTemplate>
																	</Setter.Value>
																</Setter>
															</Style>
														</Button.Style>
													</Button>
												</Grid>
											</Grid>
										</DataTemplate>
									</ListView.ItemTemplate>
								</ListView>
							</StackPanel>

						</Grid>
					</GroupBox>
				</StackPanel>
			</TabItem>
			<TabItem Header="Data">
				<Grid>
					<GroupBox>
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="*" />
							</Grid.RowDefinitions>
							<Button
								Margin="3"
								Command="{Binding ImportDataCommand}"
								Content="Import data" />
							<Button
								Grid.Column="1"
								Margin="3"
								Command="{Binding ExportDataCommand}"
								Content="Export data" />
						</Grid>
					</GroupBox>
				</Grid>
			</TabItem>
			<TabItem Header="Certificates">
				<Grid>
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition Height="Auto" />
						<RowDefinition Height="*" />
					</Grid.RowDefinitions>

					<StackPanel Orientation="Horizontal">
						<Button
							Margin="10,5"
							Command="{Binding AddSavedCertificateCommand}"
							Content="Add Store Certificate" />
						<Button
							Margin="10,5"
							Command="{Binding AddCertificateFileCommand}"
							Content="Add Certificate File" />
					</StackPanel>
					<Grid Grid.Row="1" Margin="10">
						<StackPanel Orientation="Horizontal">
							<TextBlock Text="Default Certificate: " />
							<ComboBox
								DisplayMemberPath="Name"
								ItemsSource="{Binding Certificates}"
								SelectedItem="{Binding DefaultCertificate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
								<i:Interaction.Triggers>
									<i:EventTrigger EventName="SelectionChanged">
										<i:InvokeCommandAction Command="{Binding DefaultCertificateChangedCommand}" />
									</i:EventTrigger>
								</i:Interaction.Triggers>
							</ComboBox>
						</StackPanel>
					</Grid>
					<ListView
						Grid.Row="2"
						Background="Transparent"
						BorderBrush="White"
						ItemsSource="{Binding Certificates}"
						ScrollViewer.HorizontalScrollBarVisibility="Disabled"
						VirtualizingPanel.IsContainerVirtualizable="True"
						VirtualizingPanel.IsVirtualizing="True"
						VirtualizingPanel.VirtualizationMode="Recycling">
						<ListView.Resources />
						<ListView.ItemTemplate>
							<DataTemplate>
								<Grid>
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
									</Grid.RowDefinitions>
									<Grid>
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="*" />
											<ColumnDefinition Width="Auto" />
										</Grid.ColumnDefinitions>
										<Grid.RowDefinitions>
											<RowDefinition Height="Auto" />
											<RowDefinition Height="Auto" />
											<RowDefinition Height="Auto" />
											<RowDefinition Height="Auto" />
										</Grid.RowDefinitions>
										<TextBlock
											Grid.Column="1"
											Margin="2,0"
											FontWeight="Bold"
											Text="{Binding Name}" />
										<TextBlock
											Grid.Row="1"
											Grid.Column="1"
											Text="{Binding FilePath, StringFormat='File Path: {0}'}"
											Visibility="{Binding FilePath, Converter={StaticResource StringNotNullOrNonEmptyToVisibilityConverter}}" />
										<TextBlock
											Grid.Row="2"
											Grid.Column="1"
											Text="{Binding Thumbprint, StringFormat='Thumbprint: {0}'}"
											Visibility="{Binding FilePath, Converter={StaticResource StringNullOrEmptyToVisibilityConverter}}" />
										<TextBlock
											Grid.Row="3"
											Grid.Column="1"
											Text="{Binding FriendlyName, StringFormat='Friendly Name: {0}'}"
											Visibility="{Binding FilePath, Converter={StaticResource StringNullOrEmptyToVisibilityConverter}}" />
										<Button
											x:Name="btnRemoveSession"
											Grid.RowSpan="4"
											Grid.Column="2"
											Margin="5"
											HorizontalAlignment="Center"
											VerticalAlignment="Center"
											Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:ucSettings}}, Path=DataContext.RemoveCertificateCommand}"
											CommandParameter="{Binding}"
											ToolTip="Remove">
											<Button.Content>
												<TextBlock
													FontFamily="Wingdings 2"
													FontSize="17"
													Foreground="Red"
													Text="O" />
											</Button.Content>
											<Button.Style>
												<Style TargetType="{x:Type Button}">
													<Setter Property="Template">
														<Setter.Value>
															<ControlTemplate TargetType="{x:Type Button}">
																<Grid>
																	<ContentPresenter RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
																</Grid>
																<ControlTemplate.Triggers>
																	<Trigger Property="IsFocused" Value="True" />
																	<Trigger Property="IsDefaulted" Value="True" />
																	<Trigger Property="IsMouseOver" Value="True">
																		<Setter Property="FontWeight" Value="Bold" />
																	</Trigger>
																	<Trigger Property="IsPressed" Value="True" />
																	<Trigger Property="IsEnabled" Value="False" />
																</ControlTemplate.Triggers>
															</ControlTemplate>
														</Setter.Value>
													</Setter>
												</Style>
											</Button.Style>
										</Button>
									</Grid>

								</Grid>
							</DataTemplate>
						</ListView.ItemTemplate>
					</ListView>
				</Grid>
			</TabItem>
		</TabControl>

	</Grid>
</base:BaseUserControl>
