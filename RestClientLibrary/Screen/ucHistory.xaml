<base:BaseUserControl
	x:Class="RestClientLibrary.Screen.ucHistory"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:base="clr-namespace:DataLibrary;assembly=DataLibrary"
	xmlns:baseCtrl="clr-namespace:DataLibrary.CustomControl;assembly=DataLibrary"
	xmlns:comm="clr-namespace:RestClientLibrary.Common"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
	xmlns:local="clr-namespace:RestClientLibrary.Screen"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:sys="clr-namespace:System;assembly=mscorlib"
	d:DesignHeight="402"
	d:DesignWidth="300"
	mc:Ignorable="d">
	<Grid>
		<Grid.Resources>
			<sys:Boolean x:Key="TrueBoolean">true</sys:Boolean>
			<sys:Boolean x:Key="FalseBoolean">false</sys:Boolean>
			<base:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
			<comm:PrettyDateConverter x:Key="PrettyDateConverter" />
		</Grid.Resources>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
		</Grid.RowDefinitions>
		<base:SearchTextBox Text="{Binding SearchText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
			<i:Interaction.Triggers>
				<i:EventTrigger EventName="Search">
					<i:InvokeCommandAction Command="{Binding SearchCommand}" />
				</i:EventTrigger>
			</i:Interaction.Triggers>
		</base:SearchTextBox>
		<ListView
			Grid.Row="1"
			Background="Transparent"
			BorderBrush="White"
			ItemsSource="{Binding FinalSessionHistory}"
			ScrollViewer.HorizontalScrollBarVisibility="Disabled"
			VirtualizingPanel.IsContainerVirtualizable="True"
			VirtualizingPanel.IsVirtualizing="True"
			VirtualizingPanel.VirtualizationMode="Recycling">
			<ListView.Resources />
			<ListView.ItemTemplate>
				<DataTemplate>
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
						<Grid.InputBindings>
							<MouseBinding Command="{Binding SessionSelectedCommand}" Gesture="LeftDoubleClick" />
						</Grid.InputBindings>
						<Grid.ContextMenu>
							<ContextMenu>
								<MenuItem Command="{Binding SessionSelectedCommand}" Header="View in Rest Client" />
								<MenuItem Header="Select Request">
									<MenuItem Command="{Binding SessionSelectedCommand}" Header="All" />
									<MenuItem
										Command="{Binding SessionSelectedCommand}"
										CommandParameter="Url"
										Header="Url Only" />
									<MenuItem
										Command="{Binding SessionSelectedCommand}"
										CommandParameter="Headers"
										Header="Headers" />
									<MenuItem
										Command="{Binding SessionSelectedCommand}"
										CommandParameter="Request"
										Header="Request Content" />
									<MenuItem
										Command="{Binding SessionSelectedCommand}"
										CommandParameter="Automation Scripts"
										Header="SCRIPT" />
									<MenuItem
										Command="{Binding SessionSelectedCommand}"
										CommandParameter="Validations"
										Header="VALIDATIONS" />
								</MenuItem>
								<MenuItem Header="Copy">
									<MenuItem
										Command="{Binding CopySessionCommand}"
										CommandParameter="Url"
										Header="Url Only" />
									<MenuItem
										Command="{Binding CopySessionCommand}"
										CommandParameter="Headers"
										Header="Request Headers" />
									<MenuItem
										Command="{Binding CopySessionCommand}"
										CommandParameter="Request"
										Header="Request Content" />
									<MenuItem
										Command="{Binding CopySessionCommand}"
										CommandParameter="ResponseHeaders"
										Header="Response Headers" />
									<MenuItem
										Command="{Binding CopySessionCommand}"
										CommandParameter="Response"
										Header="Response Content" />
								</MenuItem>
								<MenuItem Header="Save">
									<MenuItem Command="{Binding SaveRequestToMasterCommand}" Header="To Master" />
									<MenuItem Command="{Binding SaveRequestToFileCommand}" Header="To File" />
								</MenuItem>
								<MenuItem Header="Email">
									<MenuItem
										Command="{Binding EmailInBodyCommand}"
										CommandParameter="{StaticResource FalseBoolean}"
										Header="In Body" />
									<MenuItem
										Command="{Binding EmailInBodyCommand}"
										CommandParameter="{StaticResource TrueBoolean}"
										Header="In Body(With Response)" />
									<MenuItem
										Command="{Binding EmailAsAttachmentCommand}"
										CommandParameter="{StaticResource FalseBoolean}"
										Header="As Attachment" />
									<MenuItem
										Command="{Binding EmailAsAttachmentCommand}"
										CommandParameter="{StaticResource TrueBoolean}"
										Header="As Attachment(With Response)" />
								</MenuItem>
								<MenuItem Command="{Binding RemoveSessionCommand}" Header="Delete" />
							</ContextMenu>
						</Grid.ContextMenu>
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							<TextBlock
								Margin="2,0"
								FontWeight="Bold"
								Text="{Binding Operation}" />
							<baseCtrl:ColoredTextBlock
								Grid.Column="1"
								Margin="3,0"
								ColorTextRegex="\{{([^}]*)\}}"
								ColoredTextBrush="{DynamicResource VariableBrush}">
								<baseCtrl:ColoredTextBlock.Style>
									<Style TargetType="baseCtrl:ColoredTextBlock">
										<Setter Property="ColoredText" Value="{Binding PreUrl}" />
										<Style.Triggers>
											<DataTrigger Binding="{Binding PreUrl}" Value="{x:Null}">
												<Setter Property="ColoredText" Value="{Binding Url}" />
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</baseCtrl:ColoredTextBlock.Style>
							</baseCtrl:ColoredTextBlock>
							<Button
								x:Name="btnRemoveSession"
								Grid.Column="2"
								Margin="3"
								HorizontalAlignment="Center"
								VerticalAlignment="Center"
								Command="{Binding RemoveSessionCommand}"
								ToolTip="Remove">
								<Button.Content>
									<TextBlock
										FontFamily="Wingdings 2"
										FontSize="17"
										Foreground="Red"
										Text="O" />
								</Button.Content>
								<Button.Style>
									<Style TargetType="{x:Type Button}">
										<Setter Property="Template">
											<Setter.Value>
												<ControlTemplate TargetType="{x:Type Button}">
													<Grid>
														<ContentPresenter RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
													</Grid>
													<ControlTemplate.Triggers>
														<Trigger Property="IsFocused" Value="True" />
														<Trigger Property="IsDefaulted" Value="True" />
														<Trigger Property="IsMouseOver" Value="True">
															<Setter Property="FontWeight" Value="Bold" />
														</Trigger>
														<Trigger Property="IsPressed" Value="True" />
														<Trigger Property="IsEnabled" Value="False" />
													</ControlTemplate.Triggers>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</Button.Style>
							</Button>
						</Grid>
						<Grid Grid.Row="1">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<TextBlock
								Grid.Column="0"
								Margin="2,0"
								FontWeight="Bold"
								Text="{Binding StatusCode}"
								ToolTip="{Binding StatusDescription}">
								<TextBlock.Style>
									<Style TargetType="{x:Type TextBlock}">
										<Setter Property="Foreground" Value="{DynamicResource ErrorColorBrush}" />
										<Style.Triggers>
											<DataTrigger Binding="{Binding IsSuccess}" Value="True">
												<Setter Property="Foreground" Value="{DynamicResource SuccessColorBrush}" />
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</TextBlock.Style>
							</TextBlock>
							<Ellipse
								Grid.Column="1"
								Width="12"
								Height="12"
								Margin="5,0,0,0"
								HorizontalAlignment="Center"
								VerticalAlignment="Center">
								<Ellipse.Style>
									<Style TargetType="Ellipse">
										<Setter Property="Visibility" Value="Collapsed" />
										<Style.Triggers>
											<DataTrigger Binding="{Binding IsValidationSuccess}" Value="true">
												<Setter Property="Visibility" Value="Visible" />
												<Setter Property="Fill" Value="{DynamicResource SuccessColorBrush}" />
												<Setter Property="ToolTip" Value="Validation passed" />
											</DataTrigger>
											<DataTrigger Binding="{Binding IsValidationSuccess}" Value="false">
												<Setter Property="Visibility" Value="Visible" />
												<Setter Property="Fill" Value="{DynamicResource ErrorColorBrush}" />
												<Setter Property="ToolTip" Value="Validation failed" />
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</Ellipse.Style>
							</Ellipse>
							<TextBlock
								Grid.Column="2"
								HorizontalAlignment="Right"
								Text="{Binding Time, Converter={StaticResource PrettyDateConverter}}" />
						</Grid>
						<TextBlock
							Grid.Row="1"
							Text="{Binding RequestContent}"
							Visibility="{Binding DataContext.Settings.ShowRequestContentInHistory, RelativeSource={RelativeSource AncestorType={x:Type local:ucWorkspace}}, Converter={StaticResource BoolToVisibilityConverter}}" />
					</Grid>
				</DataTemplate>
			</ListView.ItemTemplate>
		</ListView>
	</Grid>
</base:BaseUserControl>
