<base:BaseUserControl
    x:Class="RestClientLibrary.Screen.ucTestSuite"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:base="clr-namespace:DataLibrary;assembly=DataLibrary"
    xmlns:cc="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:RestClientLibrary.Screen"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    d:DesignHeight="300"
    d:DesignWidth="300"
    mc:Ignorable="d">
    <Grid>
        <Grid.Resources>
            <base:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
            <local:BoolToWindowStateConverter x:Key="BoolToWindowStateConverter" />
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <cc:ChildWindow
            Name="testCaseSelectorWindow"
            Grid.RowSpan="6"
            Caption="Select Test Cases"
            IsModal="True"
            Left="300"
            Top="300"
            WindowStartupLocation="Center"
            WindowState="{Binding SelectTestCasesPopupOpen, Converter={StaticResource BoolToWindowStateConverter}}"
            WindowStyle="SingleBorderWindow">
            <Grid Width="400" Height="600">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="30" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <ListView Grid.Row="1" ItemsSource="{Binding TestCasesForSelection}">
                    <ListView.ItemTemplate>
                        <DataTemplate DataType="ListViewItem">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="40" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <CheckBox IsChecked="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                <TextBlock Grid.Column="1">
                                    <Run Text="{Binding TestCaseID}" />
                                    <Run Text=" - " />
                                    <Run Text="{Binding Title}" />
                                </TextBlock>
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
                <Button
                    Grid.Row="2"
                    Width="50"
                    Margin="0,3,5,3"
                    HorizontalAlignment="Right"
                    Command="{Binding SelectTestCasesCommand}"
                    Content="Select" />
            </Grid>
        </cc:ChildWindow>
        <TextBlock>
            <TextBlock
                Margin="5,0"
                VerticalAlignment="Center"
                FontWeight="Bold"
                Text="{Binding TestSuiteID}" />
            <TextBlock>
                <Run Text=" - " />
                <TextBlock VerticalAlignment="Center" FontWeight="Bold">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Result}" Value="Pass">
                                    <Setter Property="Text" Value="Passed" />
                                    <Setter Property="Foreground" Value="{DynamicResource SuccessColorBrush}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Result}" Value="Fail">
                                    <Setter Property="Text" Value="Failed" />
                                    <Setter Property="Foreground" Value="{DynamicResource ErrorColorBrush}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Result}" Value="InProgress">
                                    <Setter Property="Text" Value="Executing..." />
                                    <Setter Property="Foreground" Value="Black" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="Visibility" Value="Visible" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Result}" Value="NotStarted">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </TextBlock>
        <Button
            Width="80"
            Margin="0,5,125,0"
            HorizontalAlignment="Right"
            Command="{Binding ExecuteTestsCommand}"
            Content="Execute Tests" />
        <Button
            Width="50"
            Margin="0,5,65,0"
            HorizontalAlignment="Right"
            Command="{Binding SaveTestSuiteCommand}"
            Content="Save" />
        <Button
            Width="50"
            Margin="0,5,5,0"
            HorizontalAlignment="Right"
            Command="{Binding ResetCommand}"
            Content="Reset" />

        <AdornerDecorator Grid.Row="1" Margin="3">
            <TextBox Text="{Binding Title, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <base:WatermarkService.Watermark>
                    <TextBlock
                        Margin="3,0"
                        VerticalAlignment="Center"
                        Foreground="{DynamicResource PrimaryBorderBrush}"
                        Text="Title" />
                </base:WatermarkService.Watermark>
            </TextBox>
        </AdornerDecorator>
        <GroupBox Grid.Row="2" Header="Test Case Variables">
            <Grid Margin="0,3">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="0">
                    <Hyperlink Command="{Binding AddKeyValuePairCommand}">
                        <TextBlock Text="Add New" />
                    </Hyperlink>
                </TextBlock>
                <ListView
                    Grid.Row="1"
                    Background="Transparent"
                    ItemsSource="{Binding Variables}">
                    <ListView.Resources>
                        <Style TargetType="{x:Type ListViewItem}">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Setter Property="Margin" Value="3,0,3,1" />
                        </Style>
                    </ListView.Resources>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="30" />
                                </Grid.ColumnDefinitions>
                                <AdornerDecorator Grid.Column="0" Margin="3">
                                    <TextBox Text="{Binding Key, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                        <base:WatermarkService.Watermark>
                                            <TextBlock
                                                Margin="3,0"
                                                VerticalAlignment="Center"
                                                Foreground="{DynamicResource PrimaryBorderBrush}"
                                                Text="Key" />
                                        </base:WatermarkService.Watermark>
                                    </TextBox>
                                </AdornerDecorator>
                                <AdornerDecorator Grid.Column="1" Margin="3">
                                    <TextBox Text="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                        <base:WatermarkService.Watermark>
                                            <TextBlock
                                                Margin="3,0"
                                                VerticalAlignment="Center"
                                                Foreground="{DynamicResource PrimaryBorderBrush}"
                                                Text="Value" />
                                        </base:WatermarkService.Watermark>
                                    </TextBox>
                                </AdornerDecorator>
                                <Button
                                    Grid.Column="5"
                                    Width="20"
                                    VerticalAlignment="Center"
                                    Command="{Binding RemoveClickedCommand}"
                                    Content="O"
                                    FontFamily="Wingdings 2"
                                    FontSize="17"
                                    Foreground="Red"
                                    Style="{DynamicResource RemoveButtonStyle}" />
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>

            </Grid>
        </GroupBox>
        <GroupBox Grid.Row="3" Header="Test Cases">
            <Grid Margin="0,3">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="0">
                    <Hyperlink Command="{Binding AddTestCaseCommand}">
                        <TextBlock Text="Add New" />
                    </Hyperlink>
                </TextBlock>
                <ListView
                    Grid.Row="1"
                    Background="Transparent"
                    ItemsSource="{Binding TestCasesSelected}">
                    <ListView.Resources>
                        <Style TargetType="{x:Type ListViewItem}">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Setter Property="Margin" Value="3,1" />
                        </Style>
                    </ListView.Resources>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="30" />
                                </Grid.ColumnDefinitions>
                                <WrapPanel>
                                    <Image
                                        Name="image"
                                        Width="18"
                                        Height="18">
                                        <Image.Style>
                                            <Style TargetType="Image">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding TestCaseResult}" Value="Pass">
                                                        <Setter Property="Source" Value="/RestClientLibrary;component/Images/pass.png" />
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding TestCaseResult}" Value="Fail">
                                                        <Setter Property="Source" Value="/RestClientLibrary;component/Images/fail.png" />
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding TestCaseResult}" Value="InProgress">
                                                        <Setter Property="Visibility" Value="Collapsed" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding TestCaseResult}" Value="NotStarted">
                                                        <Setter Property="Visibility" Value="Collapsed" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Image.Style>
                                    </Image>
                                    <base:CircularWait
                                        Name="progress"
                                        Width="18"
                                        Height="18">
                                        <base:CircularWait.Style>
                                            <Style TargetType="{x:Type base:CircularWait}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding TestCaseResult}" Value="Pass">
                                                        <Setter Property="Visibility" Value="Collapsed" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding TestCaseResult}" Value="Fail">
                                                        <Setter Property="Visibility" Value="Collapsed" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding TestCaseResult}" Value="InProgress">
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding TestCaseResult}" Value="NotStarted">
                                                        <Setter Property="Visibility" Value="Collapsed" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </base:CircularWait.Style>
                                    </base:CircularWait>
                                </WrapPanel>
                                <!--<TextBlock VerticalAlignment="Center" Visibility="{Binding DataContext.ShowResult,RelativeSource={RelativeSource AncestorType={x:Type local:ucTestCase}},Converter={StaticResource BoolToVisibilityConverter}}" ToolTip="{Binding ResultText}" FontWeight="Bold">
                                     <TextBlock.Style>
                                     <Style TargetType="TextBlock">
                                     <Style.Triggers>
                                     <DataTrigger Binding="{Binding TestCaseResult}" Value="True">
                                     <Setter Property="Text" Value="Pass " />
                                     <Setter Property="Foreground" Value="{DynamicResource SuccessColorBrush}" />
                                     </DataTrigger>
                                     <DataTrigger Binding="{Binding TestCaseResult}" Value="False">
                                     <Setter Property="Text" Value="Fail " />
                                     <Setter Property="Foreground" Value="{DynamicResource ErrorColorBrush}" />
                                     </DataTrigger>
                                     </Style.Triggers>
                                     </Style>
                                     </TextBlock.Style>
                                     </TextBlock>-->
                                <TextBlock Grid.Column="1">
                                    <Hyperlink Command="{Binding TestCaseSelectedCommand}">
                                        <TextBlock>
                                            <Run Text="{Binding TestCaseID}" />
                                            <Run Text=" - " />
                                            <Run Text="{Binding Title}" />
                                        </TextBlock>
                                    </Hyperlink>
                                </TextBlock>
                                <Button
                                    Grid.Column="2"
                                    Width="20"
                                    VerticalAlignment="Center"
                                    Command="{Binding RemoveCommand}"
                                    Content="O"
                                    FontFamily="Wingdings 2"
                                    FontSize="17"
                                    Foreground="Red"
                                    Style="{DynamicResource RemoveButtonStyle}" />
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>

            </Grid>
        </GroupBox>
        <base:FluidProgressBar
            Grid.Row="4"
            Height="10"
            Foreground="{DynamicResource DarkBackColor}"
            IsBusy="{Binding IsBusy}" />
    </Grid>
</base:BaseUserControl>
