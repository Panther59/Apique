<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:baseCtrl="clr-namespace:DataLibrary.CustomControl;assembly=DataLibrary"
	xmlns:comm="clr-namespace:RestClientLibrary.Common"
	xmlns:xcd="http://schemas.xceed.com/wpf/xaml/toolkit">


	<Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border Padding="{TemplateBinding Padding}">
						<Grid Background="Transparent" SnapsToDevicePixels="False">
							<Grid.RowDefinitions>
								<RowDefinition Height="19" />
								<RowDefinition Height="*" />
							</Grid.RowDefinitions>
							<Grid>
								<Grid.LayoutTransform>
									<TransformGroup>
										<TransformGroup.Children>
											<TransformCollection>
												<RotateTransform Angle="-90" />
											</TransformCollection>
										</TransformGroup.Children>
									</TransformGroup>
								</Grid.LayoutTransform>
								<Ellipse
									x:Name="circle"
									Width="19"
									Height="19"
									HorizontalAlignment="Center"
									VerticalAlignment="Center"
									Fill="{TemplateBinding Background}"
									Stroke="{TemplateBinding BorderBrush}" />
								<Path
									x:Name="arrow"
									HorizontalAlignment="Center"
									VerticalAlignment="Center"
									Data="M 1,1.5 L 4.5,5 L 8,1.5"
									SnapsToDevicePixels="false"
									Stroke="{TemplateBinding BorderBrush}"
									StrokeThickness="2" />
							</Grid>
							<ContentPresenter
								Grid.Row="1"
								Margin="0,4,0,0"
								HorizontalAlignment="Center"
								VerticalAlignment="Top"
								RecognizesAccessKey="True"
								SnapsToDevicePixels="True">
								<ContentPresenter.LayoutTransform>
									<RotateTransform Angle="-90" />
								</ContentPresenter.LayoutTransform>
							</ContentPresenter>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="true">
							<Setter TargetName="arrow" Property="Data" Value="M 1,4.5  L 4.5,1  L 8,4.5" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border Padding="{TemplateBinding Padding}">
						<Grid Background="Transparent" SnapsToDevicePixels="False">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="19" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<Grid>
								<Grid.LayoutTransform>
									<TransformGroup>
										<TransformGroup.Children>
											<TransformCollection>
												<RotateTransform Angle="180" />
											</TransformCollection>
										</TransformGroup.Children>
									</TransformGroup>
								</Grid.LayoutTransform>
								<Ellipse
									x:Name="circle"
									Width="19"
									Height="19"
									HorizontalAlignment="Center"
									VerticalAlignment="Center"
									Fill="{TemplateBinding Background}"
									Stroke="{TemplateBinding BorderBrush}" />
								<Path
									x:Name="arrow"
									HorizontalAlignment="Center"
									VerticalAlignment="Center"
									Data="M 1,1.5 L 4.5,5 L 8,1.5"
									SnapsToDevicePixels="false"
									Stroke="{TemplateBinding BorderBrush}"
									StrokeThickness="2" />
							</Grid>
							<ContentPresenter
								Grid.Column="1"
								Margin="4,0,0,0"
								HorizontalAlignment="Left"
								VerticalAlignment="Center"
								RecognizesAccessKey="True"
								SnapsToDevicePixels="True" />
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="true">
							<Setter TargetName="arrow" Property="Data" Value="M 1,4.5  L 4.5,1  L 8,4.5" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border Padding="{TemplateBinding Padding}">
						<Grid Background="Transparent" SnapsToDevicePixels="False">
							<Grid.RowDefinitions>
								<RowDefinition Height="19" />
								<RowDefinition Height="*" />
							</Grid.RowDefinitions>
							<Grid>
								<Grid.LayoutTransform>
									<TransformGroup>
										<TransformGroup.Children>
											<TransformCollection>
												<RotateTransform Angle="90" />
											</TransformCollection>
										</TransformGroup.Children>
									</TransformGroup>
								</Grid.LayoutTransform>
								<Ellipse
									x:Name="circle"
									Width="19"
									Height="19"
									HorizontalAlignment="Center"
									VerticalAlignment="Center"
									Fill="{TemplateBinding Background}"
									Stroke="{TemplateBinding BorderBrush}" />
								<Path
									x:Name="arrow"
									HorizontalAlignment="Center"
									VerticalAlignment="Center"
									Data="M 1,1.5 L 4.5,5 L 8,1.5"
									SnapsToDevicePixels="false"
									Stroke="{TemplateBinding BorderBrush}"
									StrokeThickness="2" />
							</Grid>
							<ContentPresenter
								Grid.Row="1"
								Margin="0,4,0,0"
								HorizontalAlignment="Center"
								VerticalAlignment="Top"
								RecognizesAccessKey="True"
								SnapsToDevicePixels="True">
								<ContentPresenter.LayoutTransform>
									<RotateTransform Angle="90" />
								</ContentPresenter.LayoutTransform>
							</ContentPresenter>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="true">
							<Setter TargetName="arrow" Property="Data" Value="M 1,4.5  L 4.5,1  L 8,4.5" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ExpanderHeaderFocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Border>
						<Rectangle
							Margin="0"
							SnapsToDevicePixels="true"
							Stroke="Black"
							StrokeDashArray="1 2"
							StrokeThickness="1" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border Padding="{TemplateBinding Padding}">
						<Grid Background="Transparent" SnapsToDevicePixels="False">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="19" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<Ellipse
								x:Name="circle"
								Width="19"
								Height="19"
								HorizontalAlignment="Center"
								VerticalAlignment="Center"
								Fill="{TemplateBinding Background}"
								Stroke="{TemplateBinding BorderBrush}" />
							<Path
								x:Name="arrow"
								HorizontalAlignment="Center"
								VerticalAlignment="Center"
								Data="M 1,1.5 L 4.5,5 L 8,1.5"
								SnapsToDevicePixels="false"
								Stroke="{TemplateBinding BorderBrush}"
								StrokeThickness="2" />
							<ContentPresenter
								Grid.Column="1"
								Margin="4,0,0,0"
								HorizontalAlignment="Left"
								VerticalAlignment="Center"
								RecognizesAccessKey="True"
								SnapsToDevicePixels="True" />
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="true">
							<Setter TargetName="arrow" Property="Data" Value="M 1,4.5  L 4.5,1  L 8,4.5" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="{x:Type Expander}" TargetType="{x:Type Expander}">
		<Setter Property="Background" Value="{DynamicResource PrimaryBackBrush}" />
		<Setter Property="BorderBrush" Value="{DynamicResource PrimaryBorderBrush}" />
		<Setter Property="Foreground" Value="{DynamicResource PrimaryForeBrush}" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="VerticalContentAlignment" Value="Stretch" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Expander}">
					<Border
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						CornerRadius="3"
						SnapsToDevicePixels="true">
						<DockPanel>
							<ToggleButton
								x:Name="HeaderSite"
								MinWidth="0"
								MinHeight="0"
								Margin="1"
								Padding="{TemplateBinding Padding}"
								HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								Content="{TemplateBinding Header}"
								ContentTemplate="{TemplateBinding HeaderTemplate}"
								ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
								DockPanel.Dock="Top"
								FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}"
								FontFamily="{TemplateBinding FontFamily}"
								FontSize="{TemplateBinding FontSize}"
								FontStretch="{TemplateBinding FontStretch}"
								FontStyle="{TemplateBinding FontStyle}"
								FontWeight="{TemplateBinding FontWeight}"
								Foreground="{TemplateBinding Foreground}"
								IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
								Style="{StaticResource ExpanderDownHeaderStyle}" />
							<ContentPresenter
								x:Name="ExpandSite"
								Margin="{TemplateBinding Padding}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								DockPanel.Dock="Bottom"
								Focusable="false"
								Visibility="Collapsed" />
						</DockPanel>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsExpanded" Value="true">
							<Setter TargetName="ExpandSite" Property="Visibility" Value="Visible" />
						</Trigger>
						<Trigger Property="ExpandDirection" Value="Right">
							<Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Right" />
							<Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Left" />
							<Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ExpanderRightHeaderStyle}" />
						</Trigger>
						<Trigger Property="ExpandDirection" Value="Up">
							<Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Top" />
							<Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Bottom" />
							<Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ExpanderUpHeaderStyle}" />
						</Trigger>
						<Trigger Property="ExpandDirection" Value="Left">
							<Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Left" />
							<Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Right" />
							<Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ExpanderLeftHeaderStyle}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Background" Value="{DynamicResource PrimaryDisableBackBrush}" />
							<Setter Property="BorderBrush" Value="{DynamicResource PrimaryDisableBorderBrush}" />
							<Setter Property="Foreground" Value="{DynamicResource PrimaryDisableForeBrush}" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" Value="{DynamicResource PrimaryHighlightBackBrush}" />
							<Setter Property="BorderBrush" Value="{DynamicResource PrimaryHighlightBorderBrush}" />
							<Setter Property="Foreground" Value="{DynamicResource PrimaryHighlightForeBrush}" />
						</Trigger>
						<Trigger Property="IsFocused" Value="true">
							<Setter Property="BorderBrush" Value="{DynamicResource PrimaryFocusBorderBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>